#!/bin/bash

set -eo pipefail

export MAINTAINER=klud
export NAME=gitlab-runner
export IMAGE="${MAINTAINER}/${NAME}"
export VERSION=$(./ci/version)

_docker(){
    docker ${@}
}

build_regular() {
    echo -e "\033[1mBuilding image: \033[32m${2}\033[0m"
    _docker build --build-arg "${1}" -t "${2}" -f "${3}" "${4}"
}

build_upx() {
    echo -e "\033[1mBuilding image: \033[32m${1}\033[0m"
    _docker build -t "${1}" -f "${2}" "${3}"
}

tag() {
    echo -e "\033[1mTagging image: \033[32m${2}\033[0m"
    _docker tag "${1}" "${2}"
}

push() {
    echo -e "\033[1mPushing image: \033[32m${1}\033[0m"
    _docker push "${1}"
}

login() {
    _docker login --username "${1}" --password "${2}" "${3}"
}

logout() {
    _docker logout "${1}"
}

cp binaries/gitlab-ci-multi-runner dockerfiles/armhf
cp binaries/docker-machine dockerfiles/armhf

build_regular "VERSION=${VERSION}" "${IMAGE}:${VERSION}" dockerfiles/armhf/Dockerfile.regular dockerfiles/armhf
build_upx "${IMAGE}:${VERSION}-upx" dockerfiles/armhf/Dockerfile.upx dockerfiles/armhf

tag "${IMAGE}:${VERSION}" "${IMAGE}:latest"
tag "${IMAGE}:${VERSION}" "${IMAGE}:armhf"
tag "${IMAGE}:${VERSION}-upx" "${IMAGE}:upx"

if [[ -n "${CI_REGISTRY}" ]] && [[ -n "${CI_REGISTRY_IMAGE}" ]]; then
    tag "${IMAGE}:${VERSION}" "${CI_REGISTRY_IMAGE}:${VERSION}"
    tag "${IMAGE}:${VERSION}" "${CI_REGISTRY_IMAGE}:armhf"
    tag "${IMAGE}:${VERSION}" "${CI_REGISTRY_IMAGE}:latest"
    tag "${IMAGE}:${VERSION}-upx" "${CI_REGISTRY_IMAGE}:${VERSION}-upx"
    tag "${IMAGE}:${VERSION}-upx" "${CI_REGISTRY_IMAGE}:upx"

    if [[ -n "${CI_REGISTRY_USER}" ]] && [[ -n "${CI_REGISTRY_PASSWORD}" ]]; then
        login "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" "${CI_REGISTRY}"

        push "${CI_REGISTRY_IMAGE}:${VERSION}"
        push "${CI_REGISTRY_IMAGE}:armhf"
        push "${CI_REGISTRY_IMAGE}:latest"
        push "${CI_REGISTRY_IMAGE}:${VERSION}-upx"
        push "${CI_REGISTRY_IMAGE}:upx"

        logout "${CI_REGISTRY}"
    fi
fi

if [[ -n "${DOCKER_HUB_USER}" ]] && [[ -n "${DOCKER_HUB_PASSWORD}" ]]; then
    login "${DOCKER_HUB_USER}" "${DOCKER_HUB_PASSWORD}"

    push "${IMAGE}:${VERSION}"
    push "${IMAGE}:armhf"
    push "${IMAGE}:latest"
    push "${IMAGE}:${VERSION}-upx"
    push "${IMAGE}:upx"

    logout
fi